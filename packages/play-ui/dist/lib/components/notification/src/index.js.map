{"version":3,"file":"index.js","sources":["../../../../../src/components/notification/src/index.tsx"],"sourcesContent":["import { type ExtractPropTypes, type PropType, Transition, computed, createVNode, defineComponent, isVNode, render } from 'vue'\r\nimport { isFunction, isObject } from '@vue/shared'\r\nimport { type ToggleHandler, useToggle } from '../../../composables'\r\nimport { animation, uppercaseFirstWord } from '../../../utils'\r\nimport Button from '../../button'\r\nimport Icon from '../../icon'\r\n\r\ntype ShakeOffProp = 'x-button' | 'icon' | 'title'\r\nexport type NotificationProps = Partial<ExtractPropTypes<typeof notificationProps>>\r\nexport type NotificationInstance = Pick<ToggleHandler, 'state' | 'open' | 'close'>\r\n\r\nconst notificationProps = {\r\n  title: String,\r\n  content: String,\r\n  cancelButtonText: String,\r\n  confirmButtonText: String,\r\n  onCancel: Function as PropType<(handler: NotificationInstance) => any>,\r\n  onConfirm: Function as PropType<(handler: NotificationInstance) => any>,\r\n  autoClose: {\r\n    type: Boolean,\r\n    default: true,\r\n  },\r\n  shakeOff: {\r\n    type: Array as PropType<ShakeOffProp[]>,\r\n    default: () => [],\r\n  },\r\n  placement: {\r\n    type: String as PropType<'left' | 'right'>,\r\n    default: 'left',\r\n  },\r\n}\r\n\r\nexport const NotificationConstructor = defineComponent({\r\n  name: 'Notification',\r\n  props: notificationProps,\r\n  setup(props, { slots }) {\r\n    const notify = useToggle() as NotificationInstance\r\n\r\n    notify.open()\r\n\r\n    props.autoClose && notify.close({ delay: 3000 })\r\n\r\n    const animate = computed(() => uppercaseFirstWord(props.placement))\r\n\r\n    const isShake = (prop: ShakeOffProp) => props.shakeOff.includes(prop)\r\n\r\n    const onCancel = () => props.onCancel?.(notify)\r\n\r\n    const onConfirm = () => props.onConfirm?.(notify)\r\n\r\n    const renderNotification = () => {\r\n      const renderIcon = () => {\r\n        if (!isShake('icon'))\r\n          return <Icon name='bell' />\r\n      }\r\n      const renderTitleContent = () => {\r\n        const renderFn = [\r\n          <div class='pl-notification-content'>{props.content}</div>,\r\n        ]\r\n        if (!isShake('title'))\r\n          renderFn.unshift(<h3 class='pl-notification-title'>{props.title}</h3>)\r\n\r\n        return renderFn\r\n      }\r\n      const renderXButton = () => {\r\n        if (!isShake('x-button')) {\r\n          return (\r\n            <Button\r\n              class='pl-notification-close'\r\n              type='link'\r\n              state='info'\r\n              icon-left='x-lg'\r\n              onClick={notify.close}\r\n            />\r\n          )\r\n        }\r\n      }\r\n      const renderButton = () => {\r\n        const renderFn = []\r\n        if (props.cancelButtonText) {\r\n          renderFn.push(\r\n            <Button\r\n              type='link'\r\n              onClick={onCancel}\r\n              v-slots={{\r\n                default: props.cancelButtonText,\r\n              }}\r\n            />,\r\n          )\r\n        }\r\n        if (props.confirmButtonText) {\r\n          renderFn.push(\r\n            <Button\r\n              type='link'\r\n              onClick={onConfirm}\r\n              v-slots={{\r\n                default: props.confirmButtonText,\r\n              }}\r\n            />,\r\n          )\r\n        }\r\n        return renderFn\r\n      }\r\n\r\n      return (\r\n        <div class='pl-notification'>\r\n          {renderIcon()}\r\n          <main>\r\n            {renderXButton()}\r\n            {renderTitleContent()}\r\n            {renderButton()}\r\n          </main>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return () => (\r\n      <Transition\r\n        enter-active-class={animation(`slideIn${animate.value}`)}\r\n        leave-active-class={animation(`zoomOut${animate.value}`)}\r\n        appear\r\n      >\r\n        {\r\n          notify.state.value\r\n            ? slots.headless?.()[0]\r\n              ?? renderNotification()\r\n            : null\r\n        }\r\n      </Transition>\r\n    )\r\n  },\r\n})\r\n\r\nlet notificationsContainer: HTMLDivElement | null = null\r\n\r\nexport default (options?: NotificationProps) => {\r\n  if (!notificationsContainer) {\r\n    notificationsContainer = document.createElement('div')\r\n    notificationsContainer.className = 'pl-notification-container'\r\n    document.body.appendChild(notificationsContainer)\r\n  }\r\n  const props = isObject(options) ? { ...options } : null\r\n  const child = (isFunction(options) || isVNode(options))\r\n    ? {\r\n        headless: isFunction(options)\r\n          ? options\r\n          : () => options,\r\n      }\r\n    : null\r\n\r\n  const container = document.createElement('div')\r\n  const notification = createVNode(NotificationConstructor, props, child)\r\n  render(notification, container)\r\n  notificationsContainer.classList.add(`__${options?.placement || 'left'}`)\r\n  notificationsContainer.appendChild(container.firstChild!)\r\n}\r\n"],"names":["defineComponent","useToggle","computed","uppercaseFirstWord","_createVNode","Icon","Button","Transition","animation","isObject","isFunction","isVNode","createVNode","render"],"mappings":"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"}