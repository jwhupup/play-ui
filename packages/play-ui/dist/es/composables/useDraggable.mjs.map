{"version":3,"file":"useDraggable.mjs","sources":["../../../src/composables/useDraggable.ts"],"sourcesContent":["import { type MaybeRef } from 'vue'\r\nimport { onMounted, onUnmounted, ref, toValue } from 'vue'\r\n\r\nexport interface DraggableOptions {\r\n  target?: MaybeRef<HTMLElement | undefined>\r\n  /**\r\n   * Avoiding positional calculation errors caused by css style 'transform: translate()'.\r\n   */\r\n  translateX?: MaybeRef<number>\r\n  translateY?: MaybeRef<number>\r\n}\r\n\r\nexport const useDraggable = (\r\n  handle: MaybeRef<HTMLElement | undefined>,\r\n  options: DraggableOptions = {},\r\n) => {\r\n  const {\r\n    target = document.documentElement,\r\n    translateX = 0,\r\n    translateY = 0,\r\n  } = options\r\n\r\n  let unhandle: HTMLElement | undefined\r\n  let untarget: HTMLElement | undefined\r\n  const handleRect = ref<DOMRect>()\r\n  const pointerStartPos = ref({ x: 0, y: 0 })\r\n\r\n  onMounted(() => {\r\n    unhandle = toValue(handle)\r\n    untarget = toValue(target)\r\n\r\n    if (!unhandle || !untarget)\r\n      return\r\n\r\n    unhandle.addEventListener('dragstart', dragstart)\r\n    untarget.addEventListener('dragenter', dragenter)\r\n    untarget.addEventListener('dragover', dragover)\r\n    untarget.addEventListener('dragleave', dragleave)\r\n    untarget.addEventListener('drop', drop)\r\n  })\r\n\r\n  onUnmounted(() => {\r\n    if (!unhandle || !untarget)\r\n      return\r\n\r\n    unhandle.removeEventListener('dragstart', dragstart)\r\n    untarget.removeEventListener('dragenter', dragenter)\r\n    untarget.removeEventListener('dragover', dragover)\r\n    untarget.removeEventListener('dragleave', dragleave)\r\n    untarget.removeEventListener('drop', drop)\r\n  })\r\n\r\n  function dragstart(evt: DragEvent) {\r\n    // console.log('dragstart: ', evt)\r\n    handleRect.value = unhandle?.getBoundingClientRect()\r\n    pointerStartPos.value.x = evt.clientX\r\n    pointerStartPos.value.y = evt.clientY\r\n  }\r\n\r\n  function dragenter(evt: DragEvent) {\r\n    evt.dataTransfer!.dropEffect = 'move'\r\n    // console.log('dragenter: ', evt)\r\n  }\r\n\r\n  function dragover(evt: DragEvent) {\r\n    // console.log('dragover: ', evt, evt.clientX, evt.clientY)\r\n    evt.preventDefault()\r\n  }\r\n\r\n  function dragleave(evt: DragEvent) {\r\n    // console.log('dragleave: ', evt)\r\n    evt.dataTransfer!.dropEffect = 'none'\r\n  }\r\n\r\n  function drop(evt: DragEvent) {\r\n    // console.log('drop: ', evt)\r\n    if (!handleRect.value || !unhandle)\r\n      return\r\n\r\n    console.log(toValue(translateX))\r\n\r\n    unhandle.style.position = 'absolute'\r\n    unhandle.style.top = `${handleRect.value.y + toValue(translateY) + evt.clientY - pointerStartPos.value.y}px`\r\n    unhandle.style.left = `${handleRect.value.x + toValue(translateX) + evt.clientX - pointerStartPos.value.x}px`\r\n  }\r\n}\r\n"],"names":[],"mappings":";AAYO,MAAM,eAAe,CAC1B,QACA,UAA4B,OACzB;AACG,QAAA;AAAA,IACJ,SAAS,SAAS;AAAA,IAClB,aAAa;AAAA,IACb,aAAa;AAAA,EACX,IAAA;AAEA,MAAA;AACA,MAAA;AACJ,QAAM,aAAa;AACnB,QAAM,kBAAkB,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG;AAE1C,YAAU,MAAM;AACd,eAAW,QAAQ,MAAM;AACzB,eAAW,QAAQ,MAAM;AAErB,QAAA,CAAC,YAAY,CAAC;AAChB;AAEO,aAAA,iBAAiB,aAAa,SAAS;AACvC,aAAA,iBAAiB,aAAa,SAAS;AACvC,aAAA,iBAAiB,YAAY,QAAQ;AACrC,aAAA,iBAAiB,aAAa,SAAS;AACvC,aAAA,iBAAiB,QAAQ,IAAI;AAAA,EAAA,CACvC;AAED,cAAY,MAAM;AACZ,QAAA,CAAC,YAAY,CAAC;AAChB;AAEO,aAAA,oBAAoB,aAAa,SAAS;AAC1C,aAAA,oBAAoB,aAAa,SAAS;AAC1C,aAAA,oBAAoB,YAAY,QAAQ;AACxC,aAAA,oBAAoB,aAAa,SAAS;AAC1C,aAAA,oBAAoB,QAAQ,IAAI;AAAA,EAAA,CAC1C;AAED,WAAS,UAAU,KAAgB;AAEtB,eAAA,QAAQ,qCAAU;AACb,oBAAA,MAAM,IAAI,IAAI;AACd,oBAAA,MAAM,IAAI,IAAI;AAAA,EAChC;AAEA,WAAS,UAAU,KAAgB;AACjC,QAAI,aAAc,aAAa;AAAA,EAEjC;AAEA,WAAS,SAAS,KAAgB;AAEhC,QAAI,eAAe;AAAA,EACrB;AAEA,WAAS,UAAU,KAAgB;AAEjC,QAAI,aAAc,aAAa;AAAA,EACjC;AAEA,WAAS,KAAK,KAAgB;AAExB,QAAA,CAAC,WAAW,SAAS,CAAC;AACxB;AAEM,YAAA,IAAI,QAAQ,UAAU,CAAC;AAE/B,aAAS,MAAM,WAAW;AAC1B,aAAS,MAAM,MAAM,GAAG,WAAW,MAAM,IAAI,QAAQ,UAAU,IAAI,IAAI,UAAU,gBAAgB,MAAM;AACvG,aAAS,MAAM,OAAO,GAAG,WAAW,MAAM,IAAI,QAAQ,UAAU,IAAI,IAAI,UAAU,gBAAgB,MAAM;AAAA,EAC1G;AACF;"}