{"version":3,"file":"useCount.mjs","sources":["../../../src/composables/useCount.ts"],"sourcesContent":["import { type Ref, ref, toValue } from 'vue'\r\nimport { isNumber } from '../utils'\r\n\r\nexport interface CountOptions {\r\n  initial?: number\r\n  min?: number | Ref<number>\r\n  max?: number | Ref<number>\r\n}\r\n\r\nexport const useCount = (options: CountOptions = {}) => {\r\n  const {\r\n    min = -Infinity,\r\n    max = Infinity,\r\n    initial = 0,\r\n  } = options\r\n\r\n  const count = ref(initial)\r\n\r\n  const add = (step = 1) => {\r\n    if (isNumber(toValue(max)) && count.value < toValue(max)) {\r\n      if (count.value + step > toValue(max))\r\n        return count.value = toValue(max)\r\n      count.value += step\r\n    }\r\n  }\r\n\r\n  const sub = (step = 1) => {\r\n    if (isNumber(toValue(min)) && count.value > toValue(min)) {\r\n      if (count.value - step < toValue(min))\r\n        return count.value = toValue(min)\r\n      count.value -= step\r\n    }\r\n  }\r\n\r\n  const update = (value: number) => {\r\n    if (value >= toValue(min) && value <= toValue(max))\r\n      count.value = value\r\n  }\r\n\r\n  return {\r\n    count,\r\n    add,\r\n    sub,\r\n    update,\r\n  }\r\n}\r\n"],"names":[],"mappings":";;AASO,MAAM,WAAW,CAAC,UAAwB,OAAO;AAChD,QAAA;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,EACR,IAAA;AAEE,QAAA,QAAQ,IAAI,OAAO;AAEnB,QAAA,MAAM,CAAC,OAAO,MAAM;AACpB,QAAA,SAAS,QAAQ,GAAG,CAAC,KAAK,MAAM,QAAQ,QAAQ,GAAG,GAAG;AACxD,UAAI,MAAM,QAAQ,OAAO,QAAQ,GAAG;AAC3B,eAAA,MAAM,QAAQ,QAAQ,GAAG;AAClC,YAAM,SAAS;AAAA,IACjB;AAAA,EAAA;AAGI,QAAA,MAAM,CAAC,OAAO,MAAM;AACpB,QAAA,SAAS,QAAQ,GAAG,CAAC,KAAK,MAAM,QAAQ,QAAQ,GAAG,GAAG;AACxD,UAAI,MAAM,QAAQ,OAAO,QAAQ,GAAG;AAC3B,eAAA,MAAM,QAAQ,QAAQ,GAAG;AAClC,YAAM,SAAS;AAAA,IACjB;AAAA,EAAA;AAGI,QAAA,SAAS,CAAC,UAAkB;AAChC,QAAI,SAAS,QAAQ,GAAG,KAAK,SAAS,QAAQ,GAAG;AAC/C,YAAM,QAAQ;AAAA,EAAA;AAGX,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;"}